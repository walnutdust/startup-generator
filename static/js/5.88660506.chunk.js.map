{"version":3,"sources":["components/hero/FullWidthWithImage.js","helpers/strings.js"],"names":["StyledHeader","styled","Header","LogoLink","Container","div","TwoColumn","LeftColumn","RightColumn","backgroundImage","Content","Heading","h1","Paragraph","p","Actions","FullWidthWithImage","primaryActionUrl","primaryActionText","theme","useContext","ThemeContext","StartupContext","startUp","slogan","subslogan","heading","titleCase","start","textColor500","emphasis","id","links","href","text","collapseBreakpointClass","className","bgColor500","hocusBgColor700","string","split","map","s","toUpperCase","substring","capitalizeFirstLetter","join"],"mappings":"mMAaMA,EAAeC,YAAOC,KAAV,uFAAGD,CAAH,kDAEdE,IAFc,wCAWZC,EAtBCH,IAsBcI,IAAN,oFAtBRJ,CAsBQ,gFACTK,EAvBCL,IAuBcI,IAAN,oFAvBRJ,CAuBQ,wKACTM,EAxBCN,IAwBeI,IAAN,qFAxBTJ,CAwBS,mIACVO,EAAcP,IAAOI,IAAV,sFAAGJ,CAAH,gR,kIAwEF,CACHQ,gBADG,YApETC,EA7BCT,IA6BYI,IAAN,kFA7BNJ,CA6BM,qMACPU,EA9BCV,IA8BYW,GAAN,kFA9BNX,CA8BM,kMACPY,EA/BCZ,IA+Bca,EAAN,oFA/BRb,CA+BQ,iQAETc,EAAUd,IAAOI,IAAV,kFAAGJ,CAAH,uhC,oSAyEEe,UA5DY,SAAC,GAGrB,IAAD,IAFJC,wBAEI,MAFe,IAEf,MADJC,yBACI,MADgB,UAChB,EACEC,EAAQC,qBAAWC,KADrB,EAWsBD,qBAAWE,KAXjC,mBAWWC,GAXX,WAYEC,EAASD,EAAQC,OACjBf,EAAkBc,EAAQd,gBAC1BgB,EAAYF,EAAQE,UAEpBC,EACJ,qCACGC,YAAUH,EAAOI,OAClB,wBACA,uBACA,uBAAWT,EAAMU,aAAjB,SAAgCL,EAAOM,cAI3C,OACE,cAAC1B,EAAD,CAAW2B,GAAG,OAAd,SACE,eAACzB,EAAD,WACE,eAACC,EAAD,WACE,cAACP,EAAD,CAAcgC,MA1BL,CACf,CACE,CAAEC,KAAM,QAASC,KAAM,SACvB,CAAED,KAAM,YAAaC,KAAM,YAC3B,CAAED,KAAM,gBAAiBC,KAAM,kBAsBIC,wBAAwB,OACvD,eAACzB,EAAD,WACE,cAACC,EAAD,UAAUe,IACV,cAACb,EAAD,UAAYY,IACZ,cAACV,EAAD,UACE,iBACEkB,KAAMhB,EAENmB,UAAU,uBAHZ,MAEO,CAACjB,EAAMkB,WAAYlB,EAAMmB,iBAFhC,SAKGpB,YAQT,sCAE6BT,EAF7B,gB,gCClGR,kCAEA,IAIMkB,EAAY,SAACY,GAEjB,OADoBA,EAAOC,MAAM,KACdC,KAAI,SAACC,GAAD,OANK,SAACH,GAC7B,OAAOA,EAAO,GAAGI,cAAgBJ,EAAOK,UAAU,GAKpBC,CAAsBH,MAAII,KAAK","file":"static/js/5.88660506.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport tw from \"twin.macro\";\nimport styled from \"styled-components\";\nimport { css } from \"styled-components/macro\"; //eslint-disable-line\nimport { ThemeContext } from \"contexts/themeContext\";\nimport { StartupContext } from \"contexts/startUpContext\";\nimport { titleCase } from \"helpers/strings\";\n\nimport Header, {\n  LogoLink,\n  // NavLink as NavLinkBase,\n} from \"../headers/light.js\";\n\nconst StyledHeader = styled(Header)`\n  ${tw`justify-between`}\n  ${LogoLink} {\n    ${tw`mr-8 pb-0`}\n  }\n`;\n\n// const NavLink = tw(NavLinkBase)`\n//   sm:text-sm sm:mx-6\n// `;\n\nconst Container = tw.div`relative -mx-8 -mt-8`;\nconst TwoColumn = tw.div`flex flex-col lg:flex-row bg-gray-100`;\nconst LeftColumn = tw.div`ml-8 mr-8 xl:pl-10 py-8`;\nconst RightColumn = styled.div`\n  ${tw`bg-green-500 bg-cover bg-center xl:ml-24 h-96 lg:h-auto lg:w-1/2 lg:flex-1`}\n`;\n\nconst Content = tw.div`mt-24 lg:mt-24 lg:mb-24 flex flex-col sm:items-center lg:items-stretch`;\nconst Heading = tw.h1`text-3xl sm:text-5xl md:text-6xl lg:text-5xl font-black leading-none`;\nconst Paragraph = tw.p`max-w-md my-8 lg:my-5 lg:my-8 sm:text-lg lg:text-base xl:text-lg leading-loose`;\n\nconst Actions = styled.div`\n  ${tw`mb-8 lg:mb-0`}\n  .action {\n    ${tw`text-center inline-block w-full sm:w-48 py-4 font-semibold tracking-wide rounded hocus:outline-none focus:shadow-outline transition duration-300`}\n  }\n  .primaryAction {\n    ${tw`text-gray-100`}\n  }\n  .secondaryAction {\n    ${tw`mt-4 sm:mt-0 sm:ml-4 bg-gray-300 text-gray-700 hover:bg-gray-400 hover:text-gray-800`}\n  }\n`;\n\nconst FullWidthWithImage = ({\n  primaryActionUrl = \"#\",\n  primaryActionText = \"Sign Up\",\n}) => {\n  const theme = useContext(ThemeContext);\n\n  const navLinks = [\n    [\n      { href: \"#hero\", text: \"About\" },\n      { href: \"#features\", text: \"Features\" },\n      { href: \"#testimonials\", text: \"Testimonials\" },\n    ],\n  ];\n  // eslint-disable-next-line no-unused-vars\n  const [random, startUp] = useContext(StartupContext);\n  const slogan = startUp.slogan;\n  const backgroundImage = startUp.backgroundImage;\n  const subslogan = startUp.subslogan;\n\n  const heading = (\n    <>\n      {titleCase(slogan.start)}\n      <wbr />\n      <br />\n      <span css={theme.textColor500}>{slogan.emphasis}</span>\n    </>\n  );\n\n  return (\n    <Container id=\"hero\">\n      <TwoColumn>\n        <LeftColumn>\n          <StyledHeader links={navLinks} collapseBreakpointClass=\"sm\" />\n          <Content>\n            <Heading>{heading}</Heading>\n            <Paragraph>{subslogan}</Paragraph>\n            <Actions>\n              <a\n                href={primaryActionUrl}\n                css={[theme.bgColor500, theme.hocusBgColor700]}\n                className=\"action primaryAction\"\n              >\n                {primaryActionText}\n              </a>\n              {/* <a href={secondaryActionUrl} className=\"action secondaryAction\">\n                {secondaryActionText}\n              </a> */}\n            </Actions>\n          </Content>\n        </LeftColumn>\n        <RightColumn\n          css={{\n            backgroundImage: `url(\"${backgroundImage}\");`,\n          }}\n        ></RightColumn>\n      </TwoColumn>\n    </Container>\n  );\n};\n\nexport default FullWidthWithImage;\n","// TODO: Documentation\n\nconst capitalizeFirstLetter = (string) => {\n  return string[0].toUpperCase() + string.substring(1);\n};\n\nconst titleCase = (string) => {\n  const splitString = string.split(\" \");\n  return splitString.map((s) => capitalizeFirstLetter(s)).join(\" \");\n};\n\nexport { titleCase, capitalizeFirstLetter };\n"],"sourceRoot":""}