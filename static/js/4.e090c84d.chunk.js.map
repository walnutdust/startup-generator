{"version":3,"sources":["components/hero/BackgroundAsImageWithCenteredContent.js","helpers/strings.js"],"names":["StyledHeader","styled","Header","NavToggle","Container","div","backgroundImage","OpacityOverlay","HeroContainer","Content","Heading","h1","BackgroundAsImageWithCenteredContent","useContext","StartupContext","startUp","slogan","id","links","href","text","titleCase","start","emphasis","string","split","map","s","toUpperCase","substring","capitalizeFirstLetter","join"],"mappings":"4LAcMA,EAAeC,YAAOC,KAAV,wGAAGD,CAAH,wTAKdE,IALc,yJAWZC,EAAYH,IAAOI,IAAV,qGAAGJ,CAAH,4K,iJAmCJ,CACHK,gBADG,YA/BLC,EA1BCN,IA0BmBI,IAAN,0GA1BbJ,CA0Ba,8JAEdO,EA5BCP,IA4BkBI,IAAN,yGA5BZJ,CA4BY,4OACbQ,EA7BCR,IA6BYI,IAAN,mGA7BNJ,CA6BM,0IAEPS,EAAUT,IAAOU,GAAV,mGAAGV,CAAH,iYA6CEW,UApC8B,WAC3C,IADiD,EAUvBC,qBAAWC,KAVY,mBAUlCC,GAVkC,WAW3CC,EAASD,EAAQC,OACjBV,EAAkBS,EAAQT,gBAEhC,OACE,kBACEW,GAAG,OADL,oBAG4BX,EAH5B,gBAME,cAACC,EAAD,IACA,eAACC,EAAD,WACE,cAACR,EAAD,CAAckB,MAtBH,CACf,CACE,CAAEC,KAAM,QAASC,KAAM,SACvB,CAAED,KAAM,YAAaC,KAAM,YAC3B,CAAED,KAAM,gBAAiBC,KAAM,oBAmB7B,cAACX,EAAD,UACE,eAACC,EAAD,WACGW,YAAUL,EAAOM,OAClB,uBACCD,YAAUL,EAAOO,uB,gCCvE9B,kCAEA,IAIMF,EAAY,SAACG,GAEjB,OADoBA,EAAOC,MAAM,KACdC,KAAI,SAACC,GAAD,OANK,SAACH,GAC7B,OAAOA,EAAO,GAAGI,cAAgBJ,EAAOK,UAAU,GAKpBC,CAAsBH,MAAII,KAAK","file":"static/js/4.e090c84d.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport { titleCase } from \"helpers/strings\";\nimport tw from \"twin.macro\";\nimport styled from \"styled-components\";\nimport { css } from \"styled-components/macro\"; //eslint-disable-line\n\nimport { StartupContext } from \"contexts/startUpContext\";\n\nimport Header, {\n  // PrimaryLink as PrimaryLinkBase,\n  NavToggle,\n  // DesktopNavLinks,\n} from \"../headers/light.js\";\n\nconst StyledHeader = styled(Header)`\n  ${tw`pt-8 max-w-none w-full`}\n  a {\n    ${tw`text-gray-100 hover:border-gray-300 hover:text-gray-300`}\n  }\n  ${NavToggle}.closed {\n    ${tw`text-gray-100 hover:text-primary-500`}\n  }\n`;\n\n// const PrimaryLink = tw(PrimaryLinkBase)`rounded-full`;\nconst Container = styled.div`\n  ${tw`relative -mx-8 -mt-8 bg-center bg-cover h-screen min-h-144`}\n`;\n\nconst OpacityOverlay = tw.div`z-10 absolute inset-0 bg-black opacity-75`;\n\nconst HeroContainer = tw.div`z-20 relative px-6 sm:px-8 mx-auto h-full flex flex-col`;\nconst Content = tw.div`px-4 flex flex-1 flex-col justify-center items-center`;\n\nconst Heading = styled.h1`\n  ${tw`text-3xl text-center sm:text-4xl lg:text-5xl xl:text-6xl font-black text-gray-100 leading-snug -mt-24 sm:mt-0`}\n  span {\n    ${tw`inline-block mt-2`}\n  }\n`;\n\n// const PrimaryAction = tw.button`rounded-full px-8 py-3 mt-10 text-sm sm:text-base sm:mt-16 sm:px-8 sm:py-4 bg-gray-100 font-bold shadow transition duration-300 bg-primary-500 text-gray-100 hocus:bg-primary-700 hocus:text-gray-200 focus:outline-none focus:shadow-outline`;\n\nconst BackgroundAsImageWithCenteredContent = () => {\n  const navLinks = [\n    [\n      { href: \"#hero\", text: \"About\" },\n      { href: \"#features\", text: \"Features\" },\n      { href: \"#testimonials\", text: \"Testimonials\" },\n    ],\n  ];\n\n  // eslint-disable-next-line no-unused-vars\n  const [random, startUp] = useContext(StartupContext);\n  const slogan = startUp.slogan;\n  const backgroundImage = startUp.backgroundImage;\n\n  return (\n    <Container\n      id=\"hero\"\n      css={{\n        backgroundImage: `url(${backgroundImage});`,\n      }}\n    >\n      <OpacityOverlay />\n      <HeroContainer>\n        <StyledHeader links={navLinks} />\n        <Content>\n          <Heading>\n            {titleCase(slogan.start)}\n            <br />\n            {titleCase(slogan.emphasis)}\n          </Heading>\n        </Content>\n      </HeroContainer>\n    </Container>\n  );\n};\n\nexport default BackgroundAsImageWithCenteredContent;\n","// TODO: Documentation\n\nconst capitalizeFirstLetter = (string) => {\n  return string[0].toUpperCase() + string.substring(1);\n};\n\nconst titleCase = (string) => {\n  const splitString = string.split(\" \");\n  return splitString.map((s) => capitalizeFirstLetter(s)).join(\" \");\n};\n\nexport { titleCase, capitalizeFirstLetter };\n"],"sourceRoot":""}